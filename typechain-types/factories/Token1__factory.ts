/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token1, Token1Interface } from "../Token1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806006815260200165476f6f66793160d01b8152506040518060400160405280600381526020016247473160e81b81525081600390805190602001906200006592919062000188565b5080516200007b90600490602084019062000188565b5050506200009b336a027b46536c66c8e3000000620000a160201b60201c565b620002d0565b6001600160a01b038216620000d35760405162461bcd60e51b8152600401620000ca906200022e565b60405180910390fd5b620000e16000838362000183565b8060026000828254620000f591906200026e565b90915550506001600160a01b03821660009081526020819052604081208054839290620001249084906200026e565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200016990859062000265565b60405180910390a36200017f6000838362000183565b5050565b505050565b828054620001969062000293565b90600052602060002090601f016020900481019282620001ba576000855562000205565b82601f10620001d557805160ff191683800117855562000205565b8280016001018555821562000205579182015b8281111562000205578251825591602001919060010190620001e8565b506200021392915062000217565b5090565b5b8082111562000213576000815560010162000218565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200028e57634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620002a857607f821691505b60208210811415620002ca57634e487b7160e01b600052602260045260246000fd5b50919050565b610a8780620002e06000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100c9565b8063395093511461014957806370a082311461015c57806395d89b411461016f576100c9565b806318160ddd116100b257806318160ddd1461010c57806323b872dd14610121578063313ce56714610134576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101b0565b6040516100e391906106fd565b60405180910390f35b6100ff6100fa3660046106c9565b610242565b6040516100e391906106f2565b61011461025f565b6040516100e391906109db565b6100ff61012f36600461068e565b610265565b61013c6102fe565b6040516100e391906109e4565b6100ff6101573660046106c9565b610303565b61011461016a36600461063b565b610357565b6100d6610376565b6100ff6101853660046106c9565b610385565b6100ff6101983660046106c9565b6103fe565b6101146101ab36600461065c565b610412565b6060600380546101bf90610a16565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610a16565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061025661024f61043d565b8484610441565b50600192915050565b60025490565b60006102728484846104f5565b6001600160a01b03841660009081526001602052604081208161029361043d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102df5760405162461bcd60e51b81526004016102d690610867565b60405180910390fd5b6102f3856102eb61043d565b858403610441565b506001949350505050565b601290565b600061025661031061043d565b84846001600061031e61043d565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461035291906109f2565b610441565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610a16565b6000806001600061039461043d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103e05760405162461bcd60e51b81526004016102d69061097e565b6103f46103eb61043d565b85858403610441565b5060019392505050565b600061025661040b61043d565b84846104f5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104675760405162461bcd60e51b81526004016102d690610921565b6001600160a01b03821661048d5760405162461bcd60e51b81526004016102d6906107ad565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104e89085906109db565b60405180910390a3505050565b6001600160a01b03831661051b5760405162461bcd60e51b81526004016102d6906108c4565b6001600160a01b0382166105415760405162461bcd60e51b81526004016102d690610750565b61054c83838361061f565b6001600160a01b038316600090815260208190526040902054818110156105855760405162461bcd60e51b81526004016102d69061080a565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906105bc9084906109f2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161060691906109db565b60405180910390a361061984848461061f565b50505050565b505050565b80356001600160a01b038116811461037157600080fd5b60006020828403121561064c578081fd5b61065582610624565b9392505050565b6000806040838503121561066e578081fd5b61067783610624565b915061068560208401610624565b90509250929050565b6000806000606084860312156106a2578081fd5b6106ab84610624565b92506106b960208501610624565b9150604084013590509250925092565b600080604083850312156106db578182fd5b6106e483610624565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156107295785810183015185820160400152820161070d565b8181111561073a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a1157634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610a2a57607f821691505b60208210811415610a4b57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122076b51f5b72b61b07ff23c9865464bee8ef71d38871cba4a1c5bad3550cd4c54764736f6c63430008000033";

type Token1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Token1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token1__factory extends ContractFactory {
  constructor(...args: Token1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token1";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token1> {
    return super.deploy(overrides || {}) as Promise<Token1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Token1 {
    return super.attach(address) as Token1;
  }
  connect(signer: Signer): Token1__factory {
    return super.connect(signer) as Token1__factory;
  }
  static readonly contractName: "Token1";
  public readonly contractName: "Token1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Token1Interface {
    return new utils.Interface(_abi) as Token1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token1 {
    return new Contract(address, _abi, signerOrProvider) as Token1;
  }
}
